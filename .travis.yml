# Based on http://conda.pydata.org/docs/travis.html
language: minimal
sudo: false  # use container based build
notifications:
  email: false
branches:
  except:
    - fix-docs

matrix:
  fast_finish: true
  include:
  - addons:
      apt:
        packages:
          - gfortran
    env:
      - CONDA_ENV='py27'
  - addons:
      apt:
        packages:
          - gfortran
    env:
      - CONDA_ENV='py36'
  - addons:
      apt:
        packages:
          - gfortran
    env:
      - CONDA_ENV='py37'
  - compiler: gcc
    addons: &gcc7
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - cmake3
          - g++-7
          - gcc-7
          - gfortran-7
          - swig
    env:
      - CXX_COMPILER='g++-7'
      - C_COMPILER='gcc-7'
      - Fortran_COMPILER='gfortran-7'
      - CONDA_ENV='py37'

before_install:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget http://repo.continuum.io/miniconda/Miniconda-3.16.0-Linux-x86_64.sh -O miniconda.sh;
    elif [[ "$TRAVIS_PYTHON_VERSION" == "3.7" ]]; then
      wget http://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget http://repo.continuum.io/miniconda/Miniconda3-3.16.0-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
  - conda update -q conda
  - conda info -a

install:
  - echo $CONDA_ENV
  - conda env create -n test_env --file ci/requirements-$CONDA_ENV.yml
  - source activate test_env
  - conda list
  - python setup.py build
  - python setup.py install

script:
  - py.test tests
  - cd tests
  - python -OO -c "import py3nj"
